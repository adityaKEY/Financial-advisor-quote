openapi: 3.0.0
info:
  title: Financial Advisor Backend API
  description: Backend service for the financial advisor frontend.
  version: "1.0"
servers:
  - url: http://localhost:8082
    description: Development server
paths:
  /quote/fetch-quote-meta-data:
    post:
      summary: Fetch meta data
      description: Retrieves the meta data by meta master ids.
      operationId: getMetaData
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - metaMasters
              properties:
                metaMasters:
                  type: array
                  description: Meta masters of the Data
                  items:
                    type: string
                  example:
                    - "e3c23553e41a43f29a647e6baac85edd"
                    - "d4509f51a74545dd97f04257b39e7843"
      responses:
        "200":
          description: Meta Data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: HTTP status code
                    example: 200
                  message:
                    type: string
                    description: Status message
                    example: "Meta Data retrieved successfully"
                  data:
                    type: array
                    description: List of meta data objects
                    items:
                      type: object
                      properties:
                        idmetadata:
                          type: string
                          description: Unique identifier for the meta data
                          example: "4678e1bb1f2d414393a85dfbe0c85fff"
                        meta_data_name:
                          type: string
                          description: Name of the meta data
                          example: "Indian"
                        idmetamaster:
                          type: string
                          description: Unique identifier for the Meta master
                          example: "e3c23553e41a43f29a647e6baac85edd"
                        meta_master_name:
                          type: string
                          description: Name of the meta data
                          example: "Nationality"
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/get-lead-info:
    post:
      summary: Fetch lead information
      description: Retrieves lead information based on the provided lead ID.
      operationId: getLeadInfo
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - idlead
              properties:
                idlead:
                  type: string
                  description: Unique identifier for the lead.
                  example: "9b454d3daaf17202a51cf8fc6e6f5597"
      responses:
        "200":
          description: Lead information fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: HTTP status code
                    example: 200
                  message:
                    type: string
                    description: Status message
                    example: "Fetched Lead Info Successfully"
                  data:
                    type: object
                    properties:
                      firstname:
                        type: string
                        description: First name of the lead.
                        example: "Aditya"
                      lastname:
                        type: string
                        description: Last name of the lead.
                        example: "TestDate"
                      middlename:
                        type: string
                        description: Middle name of the lead (can be null).
                        example: null
                      contact_value:
                        type: string
                        description: Contact number of the lead.
                        example: "9091342931"
                      gender:
                        type: string
                        description: Gender of the lead.
                        example: "Male"
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/create-quote:
    post:
      summary: Create a new quote
      description: Creates a new quote with the provided details.
      operationId: createQuote
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - leadid
                - dob
                - product_name
                - nationality
                - residential_status
                - smoker
                - occupation
                - educational_background
                - annual_income
                - coverage_amount
                - cover_till_age
                - premium_payment_term
                - payment_type
                - base_premium
                - add_on_rider_amt
                - total_premium
              properties:
                leadid:
                  type: string
                  description: Unique identifier for the lead
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                dob:
                  type: string
                  description: DOB of the Lead
                  example: "1995/10/12 (YYYY/MM/DD)"
                product_name:
                  type: string
                  description: Unique identifier for the product
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                nationality:
                  type: string
                  description: Unique identifier for the nationality
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                residential_status:
                  type: string
                  description: Unique identifier for the residential_status
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                smoker:
                  type: string
                  description: Unique identifier for the smoker
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                occupation:
                  type: string
                  description: Unique identifier for the occupation
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                educational_background:
                  type: string
                  description: Unique identifier for the educational_background
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                annual_income:
                  type: string
                  description: Unique identifier for the annual_income
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                coverage_amount:
                  type: string
                  description: Unique identifier for the coverage_amount
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                cover_till_age:
                  type: string
                  description: Unique identifier for the cover_till_age
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                premium_payment_term:
                  type: string
                  description: Unique identifier for the premium_payment_term
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                payment_type:
                  type: string
                  description: Unique identifier for the payment_type
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                base_premium:
                  type: string
                  description: Unique identifier for the base_premium
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                add_on_rider_amt:
                  type: string
                  description: Unique identifier for the add_on_rider_amt
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
                total_premium:
                  type: string
                  description: Unique identifier for the total_premium
                  example: "4678e1bb1f2d414393a85dfbe0c85fff"
      responses:
        "200":
          description: Quote created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Quote created successfully."
                  leadId:
                    type: string
                    example: "12345"
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/get-addon-premium:
    post:
      summary: Get Premium for Add-Ons
      description: Calculates the premium for add-ons based on the user's details.
      operationId: getAddonPremium
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
        - name: Content-Type
          in: header
          required: true
          description: Content type of the request.
          schema:
            type: string
            example: "application/json"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dob:
                  type: string
                  example: "1996/11/28"
                smoker:
                  type: string
                  example: "71bff4c295cc40cf88478e1e2f0120a3"
                cover_till_age:
                  type: string
                  example: "a08385b3767f41339c45c43a66214b3a"
                premium_payment_term:
                  type: string
                  example: "d316419fca9a40298242480d087d9fa0"
                payment_type:
                  type: string
                  example: "8d2eb199fa42458bb99f0e9fde456be7"
                gender:
                  type: string
                  example: "Male"
      responses:
        "200":
          description: Calculated Premium For AddOns
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Calculated Premium For AddOns"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        idproduct:
                          type: string
                          example: "31e5162bc3a94f6c89e0b62c622efe04"
                        product_name:
                          type: string
                          example: "Critical Illness Rider"
                        product_description:
                          type: string
                          example: "Life’s journey made comfortable"
                        coverage_amount:
                          type: array
                          items:
                            type: object
                            properties:
                              amount:
                                type: string
                                example: "50 Lakhs"
                              text:
                                type: string
                                example: "@ ₹4860.42 / Quarterly"
                              premium:
                                type: number
                                example: 4860.42
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/calculate-premium:
    post:
      summary: Calculate Premium
      description: Calculates the premium based on the user's details.
      operationId: calculatePremium
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIs..."
        - name: Content-Type
          in: header
          required: true
          description: Content type of the request.
          schema:
            type: string
            example: "application/json"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dob:
                  type: string
                  example: "1996/11/28"
                smoker:
                  type: string
                  example: "71bff4c295cc40cf88478e1e2f0120a3"
                cover_till_age:
                  type: string
                  example: "a08385b3767f41339c45c43a66214b3a"
                premium_payment_term:
                  type: string
                  example: "d316419fca9a40298242480d087d9fa0"
                payment_type:
                  type: string
                  example: "8d2eb199fa42458bb99f0e9fde456be7"
                coverage_amount:
                  type: string
                  example: "b1e9d8ef17c34dbdaac405f2ce3249b6"
                idproduct:
                  type: string
                  example: "fb6186404c19446c8c17c8b874ea9f88"
                gender:
                  type: string
                  example: "Male"
      responses:
        "200":
          description: Calculated Premium Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Calculated Premium"
                  data:
                    type: object
                    properties:
                      text:
                        type: string
                        example: "@ ₹97225.00 / Quarterly"
                      premium:
                        type: number
                        example: 97225
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/get-product-recommendations:
    post:
      summary: Get Product Recommendations
      description: Returns a list of recommended products based on the user's input.
      operationId: getProductRecommendations
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9"
        - name: Content-Type
          in: header
          required: true
          description: Content type of the request.
          schema:
            type: string
            example: "application/json"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Investment_objective:
                  type: string
                  example: "dc98fa8f15e64f1685bb75b8041066ee"
                Annual_Income:
                  type: string
                  example: "2657a8abc0184eaab95267f8fc733b19"
                Current_life_stage:
                  type: string
                  example: "fabfec8f516745d98363ae27cfdc6e00"
                Risk_reward_ratio:
                  type: string
                  example: "1d4d4696f9f64ec5a98fd409d1b4fda4"
                Payment_type:
                  type: string
                  example: "aef630446e4f4a839aa9034db52eafc5"
                Investment_horizon:
                  type: string
                  example: "f5430265349849129868dc50b8945760"
                Age:
                  type: string
                  example: "17/11/1999"
      responses:
        "200":
          description: Successfully retrieved recommended products
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Recommended Products"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        idproduct:
                          type: string
                          example: "26805868a62c4598b4df050e9f3b6f19"
                        product_name:
                          type: string
                          example: "Platinum wealth builder"
                        product_description:
                          type: string
                          example: "Life’s journey made comfortable"
                        premium_starts_at:
                          type: integer
                          example: 500
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/calculate-premium-product-recommendations:
    post:
      summary: Calculate Premium for Recommended Products
      description: Calculates the premium for the recommended product based on the user's details.
      operationId: calculatePremiumForRecommendedProduct
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9."
        - name: Content-Type
          in: header
          required: true
          description: Content type of the request.
          schema:
            type: string
            example: "application/json"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Age:
                  type: string
                  example: "17/11/1999"
                smoker:
                  type: string
                  example: "71bff4c295cc40cf88478e1e2f0120a3"
                sumAssured:
                  type: integer
                  example: 1000000
                policy_term:
                  type: string
                  example: "a08385b3767f41339c45c43a66214b3a"
                premium_payment_term:
                  type: string
                  example: "b02142a176c644dbb11e856eb767d137"
                payment_type:
                  type: string
                  example: "8d2eb199fa42458bb99f0e9fde456be7"
                gender:
                  type: string
                  example: "Male"
      responses:
        "200":
          description: Successfully calculated premium for the recommended product
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Calculated Premium For Recommended Product"
                  data:
                    type: number
                    example: 1711514.32
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."

  /quote/get-quote-count:
    get:
      summary: Get Quote Count
      description: Retrieves the total number of quotes available.
      operationId: getQuoteCount
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9."
      responses:
        "200":
          description: Successfully retrieved the quote count
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Quote Count"
                  data:
                    type: object
                    properties:
                      quote_count:
                        type: string
                        example: "16"
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while processing the request."

  /quote/get-fields:
    post:
      summary: Get Fields for Quote
      description: Retrieves the fields required to generate a quote for a specific product.
      operationId: getFieldsForQuote
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9."
        - name: ProductId
          in: query
          required: true
          description: The ID of the product for which quote fields are required.
          schema:
            type: integer
            example: 90006
      responses:
        "200":
          description: Successfully retrieved the fields for the specified product
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Fields Retrieved"
                  data:
                    type: object
                    properties:
                      fields:
                        type: array
                        items:
                          type: string
                          example: "Field1"
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while processing the request."

  /quote/get-quote:
    post:
      summary: Get Quote Details
      description: Retrieves the details of a quote based on the provided Quotation Number and returns it in the specified format (PDF or other).
      operationId: getQuoteDetails
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QuotationNo:
                  type: string
                  example: "80000051773"
                IsPDF:
                  type: boolean
                  example: true
      responses:
        "200":
          description: Successfully retrieved the quote details in the requested format.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Quote details retrieved successfully."
                  data:
                    type: object
                    properties:
                      quoteDetails:
                        type: string
                        example: "The quote details in JSON or PDF format."
        "401":
          description: Unauthorized - Invalid token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while processing the request."

  /quote/create-quote-nvest:
    post:
      summary: Create a new quote in the Nvest system
      description: This endpoint allows users to create a new quote by submitting the form inputs, funds, riders, input options, and partial withdrawal details.
      operationId: createQuoteNvest
      parameters:
        - name: authorization
          in: header
          required: true
          description: Bearer token for authorization.
          schema:
            type: string
            example: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCIsImtpZCI6IjNQYUs0RWZ5Qk5RdTNDdGpZc2EzWW1oUTVFMCJ9."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formInputs:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                        example: "@LI_FNAME"
                      value:
                        type: string
                        example: "Parag"
                funds:
                  type: array
                  items:
                    type: object
                    properties:
                      fundId:
                        type: integer
                        example: 1
                      fundPercent:
                        type: number
                        format: float
                        example: 50.0
                riders:
                  type: array
                  items:
                    type: object
                    properties:
                      riderId:
                        type: integer
                        example: 1
                      formInputs:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                              example: "@LI_FNAME"
                            value:
                              type: string
                              example: "Parag"
                      inputOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            optionLevel:
                              type: integer
                              example: 1
                            optionId:
                              type: integer
                              example: 1
                            optionValue:
                              type: string
                              example: "Option 1"
                inputOptions:
                  type: array
                  items:
                    type: object
                    properties:
                      optionLevel:
                        type: integer
                        example: 1
                      optionId:
                        type: integer
                        example: 1
                      optionValue:
                        type: string
                        example: "Option 1"
                inputPartialWithdrawal:
                  type: array
                  items:
                    type: object
                    properties:
                      PWYear:
                        type: integer
                        example: 2023
                      PWAmount4Per:
                        type: integer
                        example: 10000
                      PWAmount8Per:
                        type: integer
                        example: 15000
      responses:
        "200":
          description: Successfully created the quote
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Quote created successfully"
                  data:
                    type: object
                    properties:
                      quoteId:
                        type: string
                        example: "12345"
                      quoteDetails:
                        type: string
                        example: "Quote details in JSON format"
        "400":
          description: Bad Request - Invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input data"
        "401":
          description: Unauthorized - Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while processing the request."
